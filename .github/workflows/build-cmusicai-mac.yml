name: Build CmusicAI for macOS

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target branch to run'
        required: true
      version:
        description: 'Version that will be built'
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake autoconf automake libtool curl make gawk \
                                  libboost-all-dev libminiupnpc-dev qtbase5-dev qttools5-dev-tools

      - name: Install SDKs and Toolchain
        run: |
          mkdir -p depends/SDKs
          cd depends/SDKs
          curl -O https://bitcoincore.org/depends-sources/sdks/Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz
          tar -zxf Xcode-11.3.1-11C505-extracted-SDK-with-libcxx-headers.tar.gz

      - name: Install Berkeley DB
        run: |
          chmod +x contrib/install_db4.sh
          ./contrib/install_db4.sh $(pwd)

      - name: Export Paths
        run: |
          export PATH=${GITHUB_WORKSPACE}/depends/x86_64-apple-darwin14/native/bin:$PATH

      - name: Prepare Build Environment
        run: |
          cd ${GITHUB_WORKSPACE}
          if [ ! -f ./configure ]; then
            echo "Generating configure script"
            ./autogen.sh
          fi

      - name: Configure Build
        run: |
          set -x
          cd ${GITHUB_WORKSPACE}
          export BDB_PREFIX=${GITHUB_WORKSPACE}/db4
          export BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx-4.8"
          export BDB_CFLAGS="-I${BDB_PREFIX}/include"
          export BOOST_ROOT=/usr/include/boost
          export BOOST_LIB_PATH=/usr/lib/x86_64-linux-gnu
          echo "BDB_PREFIX=${BDB_PREFIX}"
          echo "BDB_LIBS=${BDB_LIBS}"
          echo "BDB_CFLAGS=${BDB_CFLAGS}"
          CONFIG_SITE=${GITHUB_WORKSPACE}/depends/x86_64-apple-darwin14/share/config.site \
          ./configure --prefix=/ --disable-ccache --disable-maintainer-mode --disable-dependency-tracking --enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=${GITHUB_WORKSPACE}/depends/x86_64-apple-darwin14/native/bin/genisoimage BDB_LIBS="${BDB_LIBS}" BDB_CFLAGS="${BDB_CFLAGS}" --with-boost=${BOOST_ROOT} --with-boost-libdir=${BOOST_LIB_PATH}

      - name: Build
        run: |
          make -j$(nproc)

      - name: Package
        run: |
          mkdir -p release
          tar -czvf release/cmusicai-${{ github.sha }}-macos.tar.gz src/cmusicaid src/cmusicai-cli src/qt/cmusicai-qt

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cmusicai-macos
          path: release/*.tar.gz

      - name: Upload config.log
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: config-log
          path: /home/runner/work/Cmusic/Cmusic/depends/work/build/x86_64-apple-darwin14/native_cctools/*/cctools/config.log
